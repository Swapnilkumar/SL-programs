(defun main ()
	(princ "\nSize of array : ")
	(setq n(read))
	(setf a(make-array n))
	(princ "\nEnter Array :\n ")
	(dotimes(i n t)
		(princ " Element:")
		(setf (aref a i)(read))
	)
	
	(do ((i 0 (+ i 1)))
		((eql i n))
		(do ((j (+ i 1)(+ j 1)))
			((eql j n))
			(if (> (aref a i) (aref a j))
				(progn
					(setf t (aref a i))
					(setf (aref a i) (aref a j))
					(setf (aref a j) t)
				)
			)
		)
	)
	(princ "\nSorted array is : ")
	(dotimes(i n t)
		(princ "  ")
		(princ (aref a i))
	)
	(princ "\nThe number you want to search : ")
	(setq t(read))
	(search1 a t 0 (- n 1))
)

(defun search1 (a t l r)
	(if (eql (aref a l) t)
		(progn
			(princ "\nData found at ")
			(princ l)
			(princ "\n")
			(dos "pause")
			(exit)				
		)
	)
	(if (eql (aref a r) t)
		(progn
			(princ "\nData found at ")
			(princ r)
			(dos "pause")
			(exit)				
		)
	)
	(if (> (- r l) 1)
		(progn
			
			(setq m(/ (+ l r) 2))
			(if (eql (aref a m) t)
				(progn
					(princ "\nData found at ")
					(princ m)
					(dos "pause")
					(exit)				
				)
			)	
			(if (> (aref a m) t)
				(search a t l m)
			)
			(if (< (aref a m) t)
				(search a t m r)
			)
		)
	)
	(if (<= (- r l) 1)
		(progn
			(princ "\nData not found.")
			(dos "pause")
			(exit)
		)
	)
)
(main)

