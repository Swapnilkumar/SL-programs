(defun main()
	(princ "Enter row:")
	(setq m (read))
	(princ "Enter col:")
	(setq n (read))
	(setq mat1 (make-array (* m n)))
	(princ "Enter 1st mat")
	(dotimes (i (* m n))
		(setf (aref mat1 i) (read))
	)
	
	(print mat1)
	
	(princ "Enter row:")
	(setq n (read))
	(princ "Enter col:")
	(setq p (read))
	(setq mat2 (make-array (* p n)))
	(princ "Enter 2nd mat")
	(dotimes (i (* n p))
		(setf (aref mat2 i) (read))
	)
	(print mat2)
	
	(setf mat3 (make-array (* m p)))
	
	(do ((i 0 (+ i 1)))
		((eql i m))
		(do ((j 0 (+ j 1)))
			((eql j p))
			(setf r 0)
			(do ((k 0 (+ k 1)))
				((eql k n))
				(setf r (+ r (* (aref mat1 (+ (* i n) k)) (aref mat2 (+ (* k p) j)))))
				(setf (aref mat3 (+ (* i p) j)) r)
			)
		)
	)	
	(print mat3)
)
(main)